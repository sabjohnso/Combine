#+TITLE:Combine -- A harvested library 

- Combine :: A harvesting maching that heads, threshes, and cleans
             grain while moving over a fields
             (http://www.merriam-webster.com/dictionary/combine).

* Brief Description

  This is a header library with common functionality harvested from
  my other projects.  There are a number of tests that can be built and
  executed but otherwise, no binaries need to be compiled.  The
  library relies on the C++11 standard and is therefore only portable
  to compilers that implement the C++11 standard.

* Functionality Overview

* Patterns

#+NAME: Example function output through template parameter deduction
#+BEGIN_SRC c++
template< 
  typename X
  typename R = >

#+END_SRC

#+NAME:Recursion through inheritance  
#+BEGIN_SRC c++
template< @/parameter list/@ >
struct MetaFun;

template< @/termination parameters/@ >
struct MetaFun< @/termination arguments/@ >
{    
  @/resulting representations ... /@
};

template< @/interate parameters@/ >
struct MetFun< @/iterate template argumetns/@ >
  : public MetaFun< @output template argumetns/@> 
{}

#+END_SRC

  







